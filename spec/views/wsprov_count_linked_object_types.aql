// Fetch the counts by type of ws_objects that refference an object
// Args:
//   ws_ids - array of private workspace ids the user has access to
//   obj_key - wsprov_object key to count associations for
//   show_private - limit to objects in workspaces that a user has access to
//   show_public - limit to objects in public workspaces
//      *** if both show_private and show_public are true, this will be treated as an OR ***
//   type - ws type to filter on
//   owners - list of usernames to filter by owner

WITH wsprov_object
LET obj_id = concat('wsprov_object/', @obj_key)

let out = FIRST(
    for v, e, p in 1..100
        OUTBOUND obj_id wsprov_links, wsprov_copied_into
        OPTIONS {bfs: true, uniqueVertices: 'global'}
        FILTER (!@type || v.ws_type == @type)
        FILTER (!@owners || v.owner IN @owners)
        FILTER (@show_private && @show_public)
          ? (v.is_public || v.workspace_id IN @ws_ids)
          : (!@show_private || v.workspace_id IN @ws_ids) && (!@show_public || v.is_public)
        COLLECT type = v.ws_type with count into type_count
        RETURN {type, type_count}
)

let inb = FIRST(
    for v, e, p in 1..100
        INBOUND obj_id wsprov_links, wsprov_copied_into
        OPTIONS {bfs: true, uniqueVertices: 'global'}
        FILTER (!@type || v.ws_type == @type)
        FILTER (!@owners || v.owner IN @owners)
        FILTER (@show_private && @show_public)
          ? (v.is_public || v.workspace_id IN @ws_ids)
          : (!@show_private || v.workspace_id IN @ws_ids) && (!@show_public || v.is_public)
        COLLECT type = v.ws_type with count into type_count
        RETURN {type, type_count}
)

return {out, inb}
