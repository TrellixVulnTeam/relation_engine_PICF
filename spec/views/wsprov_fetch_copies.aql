// For a given object, fetch all the objects that it has been copied from or
// to, no matter how many nested times (copies of copies of copies, forward or backward)
// Also returns all linked objects of those copies of any nested level.
// Each sublink result has a 'parent_id' point to the copy that it is linked from.
// Args:
//   obj_key - key of the object (eg "1:2:3")
//   copy_limit - limit the amount of copy results
//   sublink_limit - limit the amount of sublink object results

let obj_id = CONCAT("wsprov_object/", @obj_key)
let copies = (
  for obj in 1..100 any obj_id wsprov_copied_into
    filter obj
    return obj
)
let sublinks = (
  for obj in wsprov_object
  filter obj in copies
  for obj1 in 1..100 any obj wsprov_links
    filter obj1
    limit @sublink_limit
    return distinct {parent_id: obj._id, obj: obj1}
)
return {copies: copies, sublinks: sublinks}
