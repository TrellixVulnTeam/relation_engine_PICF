# Get the terms from a feature

name: GO_get_terms_from_ws_feature
params:
  type: object
  required: [feature_id, ts]
  properties:
    feature_id:
      type: string
      title: Workspace feature id
    limit:
      type: integer
      title: Maximum result limit
      default: 20
      maximum: 1000
    offset:
      type: integer
      title: Result offset for pagination
      default: 0
      maximum: 100000
    ts:
      type: integer
      title: Versioning timestamp
query_prefix: WITH GO_terms
query: |
  LET go_term_results=(
    FOR f in ws_genome_features
      FILTER f._key == @feature_id
      LIMIT 1
      FOR v, e, p IN 1 OUTBOUND f ws_feature_has_GO_annotation
        FILTER e.created <= @ts AND e.expired >= @ts
        FILTER v.created <= @ts AND v.expired >= @ts
        LIMIT @offset, @limit
        RETURN DISTINCT {
          term: KEEP(v, 'id', 'name', 'namespace', 'alt_ids', 'def', 'comments',  'synonyms', 'xrefs', 'created', 'expired'),
          feature: KEEP(f, ['feature_id', 'updated_at', 'workspace_id', 'object_id', 'version'])
        }
  )
  FOR r IN go_term_results
    COLLECT feature=r.feature INTO terms=r.term
    RETURN {
      feature: feature,
      terms: terms
    }
